{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "{\"createdOn\":\"Mac\",\"createdBy\":\"Amplify\",\"createdWith\":\"7.6.25\",\"stackType\":\"function-Lambda\",\"metadata\":{}}",
  "Parameters": {
    "CloudWatchRule": {
      "Type": "String",
      "Default": "NONE",
      "Description": " Schedule Expression"
    },
    "deploymentBucketName": {
      "Type": "String"
    },
    "env": {
      "Type": "String"
    },
    "s3Key": {
      "Type": "String"
    }
  },
  "Conditions": {
    "ShouldNotCreateEnvResources": {
      "Fn::Equals": [
        {
          "Ref": "env"
        },
        "NONE"
      ]
    }
  },
  "Resources": {
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Metadata": {
        "aws:asset:path": "./src",
        "aws:asset:property": "Code"
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "deploymentBucketName"
          },
          "S3Key": {
            "Ref": "s3Key"
          }
        },
        "Handler": "index.handler",
        "FunctionName": {
          "Fn::If": [
            "ShouldNotCreateEnvResources",
            "snapshotslambda",
            {
              "Fn::Join": [
                "",
                [
                  "snapshotslambda",
                  "-",
                  {
                    "Ref": "env"
                  }
                ]
              ]
            }
          ]
        },
        "Environment": {
          "Variables": {
            "ENV": {
              "Ref": "env"
            },
            "REGION": {
              "Ref": "AWS::Region"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.x",
        "Layers": [],
        "Timeout": 25
      }
    },
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::If": [
            "ShouldNotCreateEnvResources",
            "lookupobjectsLambdaRolef1b6ee29",
            {
              "Fn::Join": [
                "",
                [
                  "lookupobjectsLambdaRolef1b6ee29",
                  "-",
                  {
                    "Ref": "env"
                  }
                ]
              ]
            }
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        }
      }
    },
    "lambdaexecutionpolicy": {
      "DependsOn": [
        "LambdaExecutionRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "lambda-execution-policy",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": {
                "Fn::Sub": [
                  "arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*",
                  {
                    "region": {
                      "Ref": "AWS::Region"
                    },
                    "account": {
                      "Ref": "AWS::AccountId"
                    },
                    "lambda": {
                      "Ref": "LambdaFunction"
                    }
                  }
                ]
              }
            },
            {
              "Action": [
                  "dynamodb:*",
                  "dax:*",
                  "application-autoscaling:DeleteScalingPolicy",
                  "application-autoscaling:DeregisterScalableTarget",
                  "application-autoscaling:DescribeScalableTargets",
                  "application-autoscaling:DescribeScalingActivities",
                  "application-autoscaling:DescribeScalingPolicies",
                  "application-autoscaling:PutScalingPolicy",
                  "application-autoscaling:RegisterScalableTarget",
                  "cloudwatch:DeleteAlarms",
                  "cloudwatch:DescribeAlarmHistory",
                  "cloudwatch:DescribeAlarms",
                  "cloudwatch:DescribeAlarmsForMetric",
                  "cloudwatch:GetMetricStatistics",
                  "cloudwatch:ListMetrics",
                  "cloudwatch:PutMetricAlarm",
                  "cloudwatch:GetMetricData",
                  "datapipeline:ActivatePipeline",
                  "datapipeline:CreatePipeline",
                  "datapipeline:DeletePipeline",
                  "datapipeline:DescribeObjects",
                  "datapipeline:DescribePipelines",
                  "datapipeline:GetPipelineDefinition",
                  "datapipeline:ListPipelines",
                  "datapipeline:PutPipelineDefinition",
                  "datapipeline:QueryObjects",
                  "ec2:DescribeVpcs",
                  "ec2:DescribeSubnets",
                  "ec2:DescribeSecurityGroups",
                  "iam:GetRole",
                  "iam:ListRoles",
                  "kms:DescribeKey",
                  "kms:ListAliases",
                  "sns:CreateTopic",
                  "sns:DeleteTopic",
                  "sns:ListSubscriptions",
                  "sns:ListSubscriptionsByTopic",
                  "sns:ListTopics",
                  "sns:Subscribe",
                  "sns:Unsubscribe",
                  "sns:SetTopicAttributes",
                  "lambda:CreateFunction",
                  "lambda:ListFunctions",
                  "lambda:ListEventSourceMappings",
                  "lambda:CreateEventSourceMapping",
                  "lambda:DeleteEventSourceMapping",
                  "lambda:GetFunctionConfiguration",
                  "lambda:DeleteFunction",
                  "resource-groups:ListGroups",
                  "resource-groups:ListGroupResources",
                  "resource-groups:GetGroup",
                  "resource-groups:GetGroupQuery",
                  "resource-groups:DeleteGroup",
                  "resource-groups:CreateGroup",
                  "tag:GetResources",
                  "kinesis:ListStreams",
                  "kinesis:DescribeStream",
                  "kinesis:DescribeStreamSummary"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
                "Action": "cloudwatch:GetInsightRuleReport",
                "Effect": "Allow",
                "Resource": "arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*"
            },
            {
                "Action": [
                    "iam:PassRole"
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Condition": {
                    "StringLike": {
                        "iam:PassedToService": [
                            "application-autoscaling.amazonaws.com",
                            "application-autoscaling.amazonaws.com.cn",
                            "dax.amazonaws.com"
                        ]
                    }
                }
            },
            {
                "Effect": "Allow",
                "Action": [
                    "iam:CreateServiceLinkedRole"
                ],
                "Resource": "*",
                "Condition": {
                    "StringEquals": {
                        "iam:AWSServiceName": [
                            "replication.dynamodb.amazonaws.com",
                            "dax.amazonaws.com",
                            "dynamodb.application-autoscaling.amazonaws.com",
                            "contributorinsights.dynamodb.amazonaws.com",
                            "kinesisreplication.dynamodb.amazonaws.com"
                        ]
                    }
                }
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "Name": {
      "Value": {
        "Ref": "LambdaFunction"
      }
    },
    "Arn": {
      "Value": {
        "Fn::GetAtt": [
          "LambdaFunction",
          "Arn"
        ]
      }
    },
    "Region": {
      "Value": {
        "Ref": "AWS::Region"
      }
    },
    "LambdaExecutionRole": {
      "Value": {
        "Ref": "LambdaExecutionRole"
      }
    }
  }
}